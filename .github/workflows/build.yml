name: 'publish'

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    env:
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # Arm Macs
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # Intel Macs
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        run: npm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: discord-tools-__VERSION__
          releaseName: 'Discord Tools v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: Upload Signatures
        uses: actions/upload-artifact@v3
        with:
          name: signatures
          path: "*.sig"

      - name: Get version from package.json
        id: get_version
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          VERSION=$(jq -r .version package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set Environment Variables
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          echo "VERSION=${{ env.VERSION }}" >> $GITHUB_ENV
          echo "PUB_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV
          echo "NOTES=See the description of the respective release to discover what is new! https://github.com/byChratos/discord-tools/releases" >> $GITHUB_ENV

          echo "SIGN_darwin_x86=$(cat src-tauri/target/x86_64-apple-darwin/release/bundle/macos/discord-tools.app.tar.gz.sig 2>/dev/null || echo 'No Signature')" >> $GITHUB_ENV
          echo "SIGN_darwin_arm=$(cat src-tauri/target/aarch64-apple-darwin/release/bundle/macos/discord-tools.app.tar.gz.sig 2>/dev/null || echo 'No Signature')" >> $GITHUB_ENV
          echo "SIGN_linux=$(cat src-tauri/target/release/bundle/appimage/discord-tools_${{ env.VERSION }}_amd64.AppImage.sig 2>/dev/null || echo 'No Signature')" >> $GITHUB_ENV
          echo "SIGN_win=$(cat src-tauri\target\release\bundle\nsis\discord-tools_${{ env.VERSION }}_x64-setup.exe.sig 2>/dev/null || echo 'No Signature')" >> $GITHUB_ENV

          echo "URL_darwin_x86=https://github.com/byChratos/reponame/releases/download/discord-tools-${{ env.VERSION }}/discord-tools_x64.app.tar.gz" >> $GITHUB_ENV
          echo "URL_darwin_arm=https://github.com/byChratos/reponame/releases/download/discord-tools-${{ env.VERSION }}/discord-tools_aarch64.app.tar.gz" >> $GITHUB_ENV
          echo "URL_linux=https://github.com/byChratos/reponame/releases/download/discord-tools-${{ env.VERSION }}/discord-tools_${{ env.VERSION }}_amd64.AppImage" >> $GITHUB_ENV
          echo "URL_win=https://github.com/byChratos/reponame/releases/download/discord-tools-${{ env.VERSION }}/discord-tools_${{ env.VERSION }}_x64-setup.exe" >> $GITHUB_ENV

      - name: Update latest.json # Only once on the Linux step
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          GIST_ID="${{ vars.GIST_ID }}"

          CONFIG_CONTENT=$(envsubst < templates/latest.json | jq -c .)
          PAYLOAD=$(jq -n --arg content "$CONFIG_CONTENT" '{files: {latest.json: {content: $content}}}')

          # Gist aktualisieren
          curl -L \
            -X PATCH \
            "https://api.github.com/gists/$GIST_ID" \
            -H "Authorization: Bearer ${{ secrets.GIST_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -d "$PAYLOAD"